const randomPuppy = require('random-puppy');
const fetch = require('node-fetch');
const packet = require('./package.json');

let apis = {
  nsfw: {
    fourK: function () {
      return new Promise(async function(resolve, reject) {
        var subreddits = [
        'NSFW_Wallpapers',
        'SexyWallpapers',
        'HighResNSFW',
        'nsfw_hd',
        'UHDnsfw'
    ]
    var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
    randomPuppy(sub)
        .then(url => {
        var response = fetch(url)
          resolve(response)
        })
      })
    },
    ahegao: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('ahegao')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
    amateur: function() {
      return new Promise(async function(resolve, reject) {
        var subreddits = [
            'RealGirls',
            'amateur',
            'gonewild'
        ]
        var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
        randomPuppy(sub)
        .then(url => {
        var response = fetch(url)
          resolve(response)
        })
      })
    },
    asian: function() {
      return new Promise(async function(resolve, reject) {
        var subreddits = [
            'AsianHotties',
            'juicyasians',
            'asianbabes'
        ]
        var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
        randomPuppy(sub)
        .then(url => {
        var response = fetch(url)
          resolve(response)
        })
      })
    },
    ass: function() {
      return new Promise(async function(resolve, reject) {
        var max = 5511;
        var min = 1000;
        var MathRan = Math.floor(Math.random() * (max - min + 0)) + min;
        var MathLoL = Math.round(MathRan);
        var response = fetch("http://media.obutts.ru/butts_preview/0" + MathLoL + ".jpg")
        //   response = response.json()
          resolve(response)
      })
    },
    bara: function() {
        return new Promise(async function(resolve, reject) {
            randomPuppy('baramanga')
            .then(url => {
            var response = fetch(url)
              resolve(response)
            })
        })
      },
    bbw: function() {
        return new Promise(async function(resolve, reject) {
          var subreddits = [
              'BBW',
              'BBWnudists',
              'BBW_Chubby'
          ]
          var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
          randomPuppy(sub)
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
    bdsm: function() {
      return new Promise(async function(resolve, reject) {
        var subreddits = [
            'bdsm',
            'bondage'
        ]
        var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
        randomPuppy(sub)
        .then(url => {
        var response = fetch(url)
          resolve(response)
        })
      })
    },
    boobs: function() {
        return new Promise(async function(resolve, reject) {
            var max = 12449;
            var min = 10000;
            var MathRan = Math.floor(Math.random() * (max - min + 0)) + min;
            var MathLoL = Math.round(MathRan);
          var response = fetch("http://media.oboobs.ru/boobs_preview/" + MathLoL + ".jpg")
          //   response = response.json()
            resolve(response)
        })
      },
	  catgirl: function() {
        return new Promise(async function(resolve, reject) {
            randomPuppy('catgirls')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      cosplay: function() {
        return new Promise(async function(resolve, reject) {
            var subreddits = [
                'nsfwcosplay',
                'cosplayonoff',
                'cosporn',
                'cosplayboobs'
            ]
            var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
          randomPuppy(sub)
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      dick: function() {
        return new Promise(async function(resolve, reject) {
            var subreddits = [
                'dickpic'
            ]
        var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
          randomPuppy(sub)
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      ecchi: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('ecchi')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      futa: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('futanari')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      hentai: function() {
        return new Promise(async function(resolve, reject) {
            var subreddits = [
                'HENTAI_GIF',
                'hentai_irl'
            ]
        var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
          randomPuppy(sub)
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      lingerie: function() {
        return new Promise(async function(resolve, reject) {
            var subreddits = [
                'lingerie',
                'stockings',
                'pantyfetish',
                'panties'
            ]
        var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
          randomPuppy(sub)
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      monstergirl: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('MonsterGirl')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      milf: function() {
        return new Promise(async function(resolve, reject) {
            var subreddits = [
                'milf',
                'amateur_milfs',
                'NotTeenNotMilf'
            ]
        var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
          randomPuppy(sub)
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      oppai: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('OppaiLove')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      paizuri: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('Paizuri')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      public: function() {
        return new Promise(async function(resolve, reject) {
            var subreddits = [
                'naughtyinpublic',
                'gwpublic',
                'exposedinpublic',
                'beachgirls'
            ]
        var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
          randomPuppy(sub)
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      pussy: function() {
        return new Promise(async function(resolve, reject) {
            var subreddits = [
                'pussy',
                'rearpussy',
                'simps',
                'vagina',
                'MoundofVenus',
                'PerfectPussies',
                'spreading'
            ]
        var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
          randomPuppy(sub)
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  pussygif: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('pussy-gifs')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      snapchat: function() {
        return new Promise(async function(resolve, reject) {
            var subreddits = [
                'NSFW_Snapchat',
                'snapchatgw'
            ]
        var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
          randomPuppy(sub)
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      trap: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('traphentai')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  tittydropgif: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('TittyDrop')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      uniform: function() {
        return new Promise(async function(resolve, reject) {
            var subreddits = [
                'MilitaryGoneWild',
                'sexyuniforms'
            ]
        var sub = subreddits[Math.round(Math.random() * (subreddits.length - 1))];
          randomPuppy(sub)
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      yaoi: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('yaoi')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      yuri: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('yuri')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      zr: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('ZettaiRyouiki')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      }
  },
  image: {
	  bird: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('birdpics')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      cat: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('cats')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      clannad: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('Clannad')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  dog: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('dogs')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      emilia: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('OneTrueEmilia')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      kanna: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('LoliDragon')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
      rem: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('OneTrueRem')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      }
  },
  memes: {
	  christian: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('dankchristianmemes')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  dank: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('dankmemes')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  edgy: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('EdgyMemes')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  gif: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('memegifs')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  offensive: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('OffensiveMemes')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  overwatch: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('Overwatch_Memes')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  pic: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('memes')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  rainbow6: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('shittyrainbow6')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  science: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('chemistrymemes')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      },
	  spongebob: function() {
        return new Promise(async function(resolve, reject) {
          randomPuppy('BikiniBottomTwitter')
          .then(url => {
          var response = fetch(url)
            resolve(response)
          })
        })
      }
  },
  version: `${packet.version}`
}

module.exports = apis;